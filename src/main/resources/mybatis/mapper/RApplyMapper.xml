<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qingwenwei.persistence.dao.RApplyMapper" >
  <resultMap id="BaseResultMap" type="com.qingwenwei.persistence.model.RApply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="userid" property="userid" jdbcType="INTEGER" />
    <id column="jobid" property="jobid" jdbcType="INTEGER" />
    <id column="apply_date" property="applyDate" jdbcType="DATE" />
    <result column="apply_status" property="applyStatus" jdbcType="CHAR" />
    <result column="compId" property="compid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    userid, jobid, apply_date, apply_status, compId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qingwenwei.persistence.model.RApplyExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from r_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.qingwenwei.persistence.model.RApplyKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from r_apply
    where userid = #{userid,jdbcType=INTEGER}
      and jobid = #{jobid,jdbcType=INTEGER}
      and apply_date = #{applyDate,jdbcType=DATE}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.qingwenwei.persistence.model.RApplyKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from r_apply
    where userid = #{userid,jdbcType=INTEGER}
      and jobid = #{jobid,jdbcType=INTEGER}
      and apply_date = #{applyDate,jdbcType=DATE}
  </delete>
  <insert id="insert" parameterType="com.qingwenwei.persistence.model.RApply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into r_apply (userid, jobid, apply_date, 
      apply_status, compId)
    values (#{userid,jdbcType=INTEGER}, #{jobid,jdbcType=INTEGER}, #{applyDate,jdbcType=DATE}, 
      #{applyStatus,jdbcType=CHAR}, #{compid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qingwenwei.persistence.model.RApply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into r_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="jobid != null" >
        jobid,
      </if>
      <if test="applyDate != null" >
        apply_date,
      </if>
      <if test="applyStatus != null" >
        apply_status,
      </if>
      <if test="compid != null" >
        compId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="jobid != null" >
        #{jobid,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null" >
        #{applyDate,jdbcType=DATE},
      </if>
      <if test="applyStatus != null" >
        #{applyStatus,jdbcType=CHAR},
      </if>
      <if test="compid != null" >
        #{compid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qingwenwei.persistence.model.RApply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update r_apply
    <set >
      <if test="applyStatus != null" >
        apply_status = #{applyStatus,jdbcType=CHAR},
      </if>
      <if test="compid != null" >
        compId = #{compid,jdbcType=INTEGER},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
      and jobid = #{jobid,jdbcType=INTEGER}
      and apply_date = #{applyDate,jdbcType=DATE}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qingwenwei.persistence.model.RApply" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update r_apply
    set apply_status = #{applyStatus,jdbcType=CHAR},
      compId = #{compid,jdbcType=INTEGER}
    where userid = #{userid,jdbcType=INTEGER}
      and jobid = #{jobid,jdbcType=INTEGER}
      and apply_date = #{applyDate,jdbcType=DATE}
  </update>
</mapper>