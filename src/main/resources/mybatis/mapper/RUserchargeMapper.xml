<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qingwenwei.persistence.dao.RUserchargeMapper" >
  <resultMap id="BaseResultMap" type="com.qingwenwei.persistence.model.RUsercharge" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="chargedate" property="chargedate" jdbcType="DATE" />
    <result column="chargeid" property="chargeid" jdbcType="INTEGER" />
    <result column="chargetime" property="chargetime" jdbcType="TIMESTAMP" />
    <result column="chargeamt" property="chargeamt" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, chargedate, chargeid, chargetime, chargeamt
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qingwenwei.persistence.model.RUserchargeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from r_usercharge
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from r_usercharge
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from r_usercharge
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qingwenwei.persistence.model.RUsercharge" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into r_usercharge (id, chargedate, chargeid, 
      chargetime, chargeamt)
    values (#{id,jdbcType=INTEGER}, #{chargedate,jdbcType=DATE}, #{chargeid,jdbcType=INTEGER}, 
      #{chargetime,jdbcType=TIMESTAMP}, #{chargeamt,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.qingwenwei.persistence.model.RUsercharge" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into r_usercharge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="chargedate != null" >
        chargedate,
      </if>
      <if test="chargeid != null" >
        chargeid,
      </if>
      <if test="chargetime != null" >
        chargetime,
      </if>
      <if test="chargeamt != null" >
        chargeamt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="chargedate != null" >
        #{chargedate,jdbcType=DATE},
      </if>
      <if test="chargeid != null" >
        #{chargeid,jdbcType=INTEGER},
      </if>
      <if test="chargetime != null" >
        #{chargetime,jdbcType=TIMESTAMP},
      </if>
      <if test="chargeamt != null" >
        #{chargeamt,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qingwenwei.persistence.model.RUsercharge" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update r_usercharge
    <set >
      <if test="chargedate != null" >
        chargedate = #{chargedate,jdbcType=DATE},
      </if>
      <if test="chargeid != null" >
        chargeid = #{chargeid,jdbcType=INTEGER},
      </if>
      <if test="chargetime != null" >
        chargetime = #{chargetime,jdbcType=TIMESTAMP},
      </if>
      <if test="chargeamt != null" >
        chargeamt = #{chargeamt,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qingwenwei.persistence.model.RUsercharge" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update r_usercharge
    set chargedate = #{chargedate,jdbcType=DATE},
      chargeid = #{chargeid,jdbcType=INTEGER},
      chargetime = #{chargetime,jdbcType=TIMESTAMP},
      chargeamt = #{chargeamt,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>